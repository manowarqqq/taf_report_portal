name: Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:

  env_init:
    runs-on: ubuntu-latest
    steps:
      - name: 'Create env file'
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm i
      - run: npm run build
      - name: Microsoft Teams Notification
#        uses: skitionek/notify-microsoft-teams@master
        if: failure()
        run: echo  status ${{ job.status }}
#        with:
#          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
#          overwrite: "{title: 'Github Bot notification'}"
#          needs: ${{ toJson(needs) }}
#          job: ${{ toJson(job) }}
#          steps: ${{ toJson(steps) }}
#
  sonarcloud:
    needs: [build]
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  teams_integration:
    runs-on: ubuntu-latest
    needs: [build]
    if: always()
#      && contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') || contains(needs.*.result, 'skipped')
    steps:
      - run: exit 1
      - name: notification failure
        uses: skitionek/notify-microsoft-teams@master
        if: failure()
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          overwrite: "{title: 'Github Bot notification'}"
          needs: ${{ toJson(needs) }}
          job: ${{ toJson(job) }}
          steps: ${{ toJson(steps) }}

#  teams_integration_failure:
#    needs: [ env_init, build, sonarcloud ]
#    name: Result in teams
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@master
#      - name: Microsoft Teams Notification
#        uses: skitionek/notify-microsoft-teams@master
#        if: ${{ always() && (contains(needs.*.result, 'failure') || contains(needs.*.result, 'skipped')) }}
#        with:
#          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
#          overwrite: "{title: 'Github Bot notification'}"
#          needs: ${{ toJson(needs) }}
#          job: ${{ toJson(job) }}
#          steps: ${{ toJson(steps) }}
#
#  c
#    needs: [env_init, build, sonarcloud]
#    name: Result in teams
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@master
#      - name: Microsoft Teams Notification
#        uses: skitionek/notify-microsoft-teams@master
#        if: success()
#        with:
#          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
#          overwrite: "{title: 'Github Bot notification'}"
#          needs: ${{ toJson(needs) }}
#          job: ${{ toJson(job) }}
#          steps: ${{ toJson(steps) }}
#

